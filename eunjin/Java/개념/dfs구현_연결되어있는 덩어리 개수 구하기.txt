import java.io.*;
import java.util.*;

class Main {
  
  static int N,M;
  static List<Integer>[] graph;
  static boolean[] visit;

  public static void main(String[] args) throws Exception{
    int answer = 0;

    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    StringTokenizer st = new StringTokenizer(br.readLine());

    N = Integer.parseInt(st.nextToken());
    M = Integer.parseInt(st.nextToken());

    graph = new ArrayList[N+1];
    for(int i=1; i<=N; i++){
      graph[i] = new ArrayList<>();
    }
    for(int i=0; i<M; i++){
      st = new StringTokenizer(br.readLine());
      int v1 = Integer.parseInt(st.nextToken());
      int v2 = Integer.parseInt(st.nextToken());

      graph[v1].add(v2);
      graph[v2].add(v1);
    }


    visit = new boolean[N+1];

    for(int i=1; i<=N; i++){
      if(!visit[i]){
        dfs(i);
        answer++;
      }
    }
    System.out.println(answer);
  }

    public static void dfs(int x){
      if(visit[x]){
        return;
      }
      visit[x] = true;
      for(int i : graph[x]){
        if(!visit[i]){
          dfs(i);
        }
      }
    }



  
}